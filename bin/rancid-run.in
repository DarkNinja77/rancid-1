#! /bin/sh
##
## $Id: rancid-run.in 3448 2016-08-15 21:30:19Z heas $
##
## @PACKAGE@ @VERSION@
## Copyright (c) @COPYYEARS@ by Terrapin Communications, Inc.
## All rights reserved.
##
## This code is derived from software contributed to and maintained by
## Terrapin Communications, Inc. by Henry Kilmer, John Heasley, Andrew Partan,
## Pete Whiting, Austin Schutz, and Andrew Fort.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the distribution.
## 3. All advertising materials mentioning features or use of this software
##    must display the following acknowledgement:
##        This product includes software developed by Terrapin Communications,
##        Inc. and its contributors for RANCID.
## 4. Neither the name of Terrapin Communications, Inc. nor the names of its
##    contributors may be used to endorse or promote products derived from
##    this software without specific prior written permission.
## 5. It is requested that non-binding fixes and modifications be contributed
##    back to Terrapin Communications, Inc.
##
## THIS SOFTWARE IS PROVIDED BY Terrapin Communications, INC. AND CONTRIBUTORS
## ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
## TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
## PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COMPANY OR CONTRIBUTORS
## BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
## POSSIBILITY OF SUCH DAMAGE.
#
# Run rancid for each of the rancid groups defined by $LIST_OF_GROUPS in
# @sysconfdir@/rancid.conf or those specified on the command-line.
#

# Default ENVFILE, overrideable with -f flag.
ENVFILE="@sysconfdir@/rancid.conf"

TMPDIR=${TMPDIR:=/tmp}; export TMPDIR
LOG_OUT=""; export LOG_OUT
LOG_BY_GRP=1; export LOG_BY_GRP

# control_rancid argv
CR_ARGV=""; export CR_ARGV

# print a usage message to stderr
pr_usage() {
    echo "usage: $0 [-Vh] [-f config_file] [-d|-l log_file] [-r device_name] [-m mail rcpt] [-M \"commit message\"] [group [group ...]]" >&2;
}

OPTIND=1
while getopts "Vhdf:r:m:M:l:" opt; do
    case "$opt" in
        V)
            echo "rancid 3.4.1"
            exit 0
            ;;
        h)
            pr_usage
            exit 0
            ;;
        d)
            LOG_OUT="/dev/stderr"
            ;;
        l)
            LOG_OUT="$OPTARG"
            ;;
        f)
            # next arg is the alternate config file name
            ENVFILE="$OPTARG"
            if [ -z $ENVFILE ]; then
                pr_usage
                exit 1
            fi
            CR_ARGV="$CR_ARGV -f \"$ENVFILE\""; export CR_ARGV
            ;;
        r)
            # next arg is the device name
            CR_ARGV="$CR_ARGV -r \"$OPTARG\""; export CR_ARGV
            ;;
        m)
            # next arg is the mailto name
            CR_ARGV="$CR_ARGV -m \"$OPTARG\""; export CR_ARGV
            ;;
        M)
            # next arg is the commit message
            CR_ARGV="$CR_ARGV -M \"$OPTARG\""; export CR_ARGV
            ;;
        *)
            echo "unknown option: -$opt" >&2
            pr_usage
            exit 1
            ;;
    esac
done
shift "$((OPTIND - 1))"

. $ENVFILE

if [ "x$LOG_OUT" != "x" ]; then
    LOG_BY_GRP=0;
elif [ "x$LOG_OUT" == "x" -a "x$LOGFILE" != "x" ]; then
    LOG_OUT="$LOGDIR/$LOGFILE"
    LOG_BY_GRP=0
fi

if [ $# -ge 1 ] ; then
    LIST_OF_GROUPS="$*"; export LIST_OF_GROUPS
elif [ "$LIST_OF_GROUPS" = "" ] ; then
    echo "LIST_OF_GROUPS is empty in $ENVFILE"
    exit 1
fi

# SENDMAIL location
SENDMAIL=${SENDMAIL:=sendmail};

if [ ! -d $LOGDIR ] ; then
    mkdir -m $UMASK -p $LOGDIR || (echo "Could not create log directory: $LOGDIR"; exit 1)
fi

if [ ! -d $TMPDIR ]; then
    mkdir -m $UMASK -p $TMPDIR || (echo "Could not create TMP directory: $TMPDIR"; exit 1)
fi

for GROUP in $LIST_OF_GROUPS
do

    if [ $LOG_BY_GRP -eq 1 ]; then
        LOG_OUT="$LOGDIR/$GROUP-$(date +%Y%m%d).$(($(ls -1f $LOGDIR/$GROUP-$(date +%Y%m%d)* 2> /dev/null | wc -l) + 1))"
    fi
    
    LOCKFILE=$TMPDIR/.$GROUP.run.lock

    (
	echo starting: `date`
	echo

	if [ -f $LOCKFILE ]
	then
	    echo hourly config diffs failed: $LOCKFILE exists
	    ls -l $LOCKFILE

	    # Send email if the lock file is old.
	    if [ "X$LOCKTIME" = "X" ] ; then
		LOCKTIME=4
	    fi
	    GRPOLDFILE=`mktemp -q $TMPDIR/.$GROUP.XXXXXX`
	    if [ $? -ne 0 ] ; then
		echo "Could not create temporary file for error email" >&2
		exit 1
	    fi
	    @PERLV@ -e "\$t = (stat(\"$LOCKFILE\"))[9]; print \"OLD\\n\" if (time() - \$t >= $LOCKTIME*60*60);" > $GRPOLDFILE
	    if [ -s $TMPDIR/.$GROUP.old ]
	    then
		(
		  echo "To: @ADMINMAILPLUS@${GROUP}${MAILDOMAIN}"
		  echo "Subject: rancid hung - $GROUP"
		  echo "Precedence: bulk"
		  echo "Auto-submitted: auto-generated"
		  echo "X-Auto-Response-Suppress: All"
		  echo ""

		  cat <<END
rancid $GROUP hung on `hostname`?  Old lockfile still exists:
`ls -l $LOCKFILE`
END
		) | $SENDMAIL -t $MAILOPTS
	    fi
	    rm -f $GRPOLDFILE
	    exit 1
	else
	    trap 'rm -fr $LOCKFILE;exit 1' 1 2 3 6 10 15
	    perl -e 'use POSIX;sysopen(FH, $ARGV[1], O_RDWR|O_CREAT|O_EXCL, 0660) or exit 1;print FH "$ARGV[0]\n";' -- $$ $LOCKFILE
	    if [ $? -eq 0 ] ; then
		    eval control_rancid $CR_ARGV $GROUP
		    trap ''  1 2 3 6 10 15
		    rm -f $LOCKFILE
	    fi
	    trap ''  1 2 3 6 10 15
	fi

	echo
	echo ending: `date`
    ) > $LOG_OUT 2>&1
done
